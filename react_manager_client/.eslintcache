[{"D:\\SGG Project\\React_Manager\\react_manager_client\\src\\index.js":"1","D:\\SGG Project\\React_Manager\\react_manager_client\\src\\redux\\store.js":"2","D:\\SGG Project\\React_Manager\\react_manager_client\\src\\redux\\reducers.js":"3","D:\\SGG Project\\React_Manager\\react_manager_client\\src\\pages\\admin\\admin.jsx":"4","D:\\SGG Project\\React_Manager\\react_manager_client\\src\\pages\\login\\login.jsx":"5","D:\\SGG Project\\React_Manager\\react_manager_client\\src\\api\\index.js":"6","D:\\SGG Project\\React_Manager\\react_manager_client\\src\\api\\ajax.js":"7","D:\\SGG Project\\React_Manager\\react_manager_client\\src\\redux\\action-types.js":"8","D:\\SGG Project\\React_Manager\\react_manager_client\\src\\redux\\actions.js":"9"},{"size":580,"mtime":1607809600051,"results":"10","hashOfConfig":"11"},{"size":267,"mtime":1607663106108,"results":"12","hashOfConfig":"11"},{"size":613,"mtime":1608090731478,"results":"13","hashOfConfig":"11"},{"size":402,"mtime":1608173353975,"results":"14","hashOfConfig":"11"},{"size":4598,"mtime":1608173465535,"results":"15","hashOfConfig":"11"},{"size":146,"mtime":1608090796253,"results":"16","hashOfConfig":"11"},{"size":752,"mtime":1608000690701,"results":"17","hashOfConfig":"11"},{"size":134,"mtime":1608087432921,"results":"18","hashOfConfig":"11"},{"size":659,"mtime":1608090804710,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1qfxnt7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"D:\\SGG Project\\React_Manager\\react_manager_client\\src\\index.js",[],["43","44"],"D:\\SGG Project\\React_Manager\\react_manager_client\\src\\redux\\store.js",[],"D:\\SGG Project\\React_Manager\\react_manager_client\\src\\redux\\reducers.js",[],"D:\\SGG Project\\React_Manager\\react_manager_client\\src\\pages\\admin\\admin.jsx",["45"],"import React, {Component} from 'react' \r\nimport {Button} from 'antd'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass Admin extends Component { \r\n    render () { \r\n\r\n        const user = this.props.user\r\n\r\n        return ( \r\n            <div>\r\n                Hello {user.username}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({user: state.user}),\r\n    {}\r\n)(Admin)","D:\\SGG Project\\React_Manager\\react_manager_client\\src\\pages\\login\\login.jsx",["46","47"],"import React, { Component } from 'react'\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport './login.less'\r\nimport logo from '../../assets/imgs/nba-logo-transparent.png'\r\nimport nba from '../../assets/imgs/nba.png'\r\nimport { login } from '../../redux/actions';\r\n\r\n// const Item = Form.Item\r\n\r\n\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    onFinish = async (values) => {\r\n        console.log('Received values of form: ', values);\r\n        // const result = await reqLogin(values)\r\n        // console.log('result', result);\r\n        const { username, password } = values\r\n        console.log(username, password);\r\n        this.props.login(username, password)\r\n    };\r\n\r\n    render() {\r\n\r\n        const user = this.props.user\r\n        const { errorMsg } = this.props.user\r\n\r\n        if(user && user._id){\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        const layout = {\r\n            labelCol: {\r\n                span: 8,\r\n            },\r\n            wrapperCol: {\r\n                span: 20,\r\n            },\r\n        };\r\n\r\n        return (\r\n            <div className='login'>\r\n                <div className='login-content-left'>\r\n                    <header className='login-header'>\r\n                        <img src={logo} style={{ width: 50, height: 100 }}></img>\r\n                        <h1>NBA Manager System</h1>\r\n                    </header>\r\n                    <span className='solgan'>WHERE AMAZING HAPPEN</span>\r\n                </div>\r\n                <section className='login-content'>\r\n                    <img src={nba} style={{ width: 150, height: 70 }} alt='nba' />\r\n\r\n                    <p>Sign in with your organizational account</p>\r\n\r\n                    {errorMsg ? <div className='errorMsg'>{errorMsg}</div> : null}\r\n\r\n                    <Form\r\n                        {...layout}\r\n                        name=\"normal_login\"\r\n                        className=\"login-form\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={this.onFinish}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[\r\n                                { required: true, message: 'Please input your Username!' },\r\n                                { min: 4, message: 'Username should at least 4 digits!' },\r\n                                { max: 12, message: 'Username can\\'t longer than 12 digits!' },\r\n                                { pattern: /^[^\\s]*$/, message: 'Username can\\'t contain whitespace!' }\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                { required: true, message: 'Please input your Password!' },\r\n                                { min: 4, message: 'Password should at least 4 digits!' },\r\n                                { max: 12, message: 'Password can\\'t longer than 15 digits!' },\r\n                                { pattern: /^[^\\s]*$/, message: 'Password can\\'t contain whitespace!' }\r\n                            ]}\r\n                        >\r\n                            <Input.Password\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                Sign in\r\n                            </Button>\r\n                        </Form.Item>\r\n\r\n                    </Form>\r\n\r\n                    <div className='login-content-bottom'>\r\n                        <span>Sign in with userID</span><br />\r\n                        <span>For help please email </span><a href='mailto:http://czhcheng27@gmail.com'>czhcheng27@gmail.com</a>\r\n                    </div>\r\n\r\n                    <h2>Develop by Zihang Cheng</h2>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({ user: state.user }),\r\n    { login }\r\n)(Login)","D:\\SGG Project\\React_Manager\\react_manager_client\\src\\api\\index.js",[],"D:\\SGG Project\\React_Manager\\react_manager_client\\src\\api\\ajax.js",[],["48","49"],"D:\\SGG Project\\React_Manager\\react_manager_client\\src\\redux\\action-types.js",[],"D:\\SGG Project\\React_Manager\\react_manager_client\\src\\redux\\actions.js",["50"],"import {\r\n    RECEIVE_USER,\r\n    SHOW_ERROR_MSG,\r\n    RESET_USER\r\n} from './action-types'\r\n\r\nimport { reqLogin } from '../api/index'\r\n\r\nexport const receiveUser = (user) => ({type: RECEIVE_USER, data: user})\r\nexport const showErrorMsg = (errorMsg) => ({type: SHOW_ERROR_MSG, data: errorMsg})\r\n\r\nexport const login = (username, password) => {\r\n    return async dispatch => {\r\n        const result = await reqLogin({username, password})\r\n        if(result.code === 0){\r\n            const user = result.data\r\n            dispatch(receiveUser(user))\r\n        }else{\r\n            const msg = result.msg\r\n            dispatch(showErrorMsg(msg))\r\n        }\r\n    }\r\n}",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":9,"nodeType":"57","messageId":"58","endLine":2,"endColumn":15},{"ruleId":"55","severity":1,"message":"59","line":2,"column":31,"nodeType":"57","messageId":"58","endLine":2,"endColumn":39},{"ruleId":"60","severity":1,"message":"61","line":50,"column":25,"nodeType":"62","endLine":50,"endColumn":76},{"ruleId":"51","replacedBy":"63"},{"ruleId":"53","replacedBy":"64"},{"ruleId":"55","severity":1,"message":"65","line":4,"column":5,"nodeType":"57","messageId":"58","endLine":4,"endColumn":15},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["66"],["67"],"'RESET_USER' is defined but never used.","no-global-assign","no-unsafe-negation"]